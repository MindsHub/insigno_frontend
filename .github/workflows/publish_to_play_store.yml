name: Publish to Play Store
on: workflow_dispatch

env:
  # these directories are the same as in F-Droid's buildserver, ensuring reproducibility
  BUILD_DIR: /home/vagrant/build/org.mindshub.insigno
  PUB_CACHE: /home/vagrant/build/org.mindshub.insigno/.pub-cache
  # these are needed by fastlane
  LC_ALL: en_US.UTF-8
  LANG: en_US.UTF-8
  FLUTTER_ROOT: /home/vagrant/build/org.mindshub.insigno/submodules/flutter

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository
        # not using actions/checkout because it does not clone `.git`, required for Flutter
        env:
          GITHUB_REPOSITORY: ${{ github.repository }}
          GITHUB_SHA: ${{ github.sha }}
        run: |
          sudo mkdir -p "$BUILD_DIR"
          sudo chown runner "$BUILD_DIR"
          git clone --recurse-submodules "https://github.com/$GITHUB_REPOSITORY.git" "$BUILD_DIR"
          cd "$BUILD_DIR"
          git checkout "$GITHUB_SHA"
      - name: Setup Fastlane
        run: |
          cd "$BUILD_DIR"
          sudo apt install ruby ruby-dev
          sudo gem install bundler
          cp Gemfile Gemfile.lock android/
          cd "$BUILD_DIR/android"
          sudo bundle install
      - name: Extract version, version code and some paths
        run: |
          cd "$BUILD_DIR"
          echo "VERSION=$(sed -nE 's~^version: ?([^\+]+)\+(.*)$~\1~p' pubspec.yaml)" >> "$GITHUB_ENV"
          VERSION_CODE="$(sed -nE 's~^version: ?([^\+]+)\+(.*)$~\2~p' pubspec.yaml)"
          echo "VERCODE=$(( "$VERSION_CODE" * 10 + 3 ))" >> "$GITHUB_ENV"
      - name: Print some information
        env:
          VERSION: ${{ env.VERSION }}
          VERCODE: ${{ env.VERCODE }}
        run: |
          echo "Version: $VERSION" >> "$GITHUB_STEP_SUMMARY"
          echo "Version code: $VERCODE" >> "$GITHUB_STEP_SUMMARY"
          echo "Build directory: $BUILD_DIR" >> "$GITHUB_STEP_SUMMARY"
      - name: Setup flutter
        run: |
          cd "$BUILD_DIR"
          submodules/flutter/bin/flutter config --no-analytics
          submodules/flutter/bin/flutter pub get
      - name: Add signing config to app/build.gradle
        env:
          KEYSTORE_BASE64: ${{ secrets.SIGNING_KEYSTORE_BASE64 }}
        run: |
          cd "$BUILD_DIR/android/app"
          openssl base64 -A -d -out keystore.jks <<< "$KEYSTORE_BASE64"
          echo >> ./build.gradle
          echo "android {" >> ./build.gradle
          echo "    signingConfigs {" >> ./build.gradle
          echo "        release {" >> ./build.gradle
          echo "            keyAlias System.env.KEY_ALIAS" >> ./build.gradle
          echo "            keyPassword System.env.KEYSTORE_PASSWORD" >> ./build.gradle
          echo "            storeFile file(System.env.BUILD_DIR + '/android/app/keystore.jks')" >> ./build.gradle
          echo "            storePassword System.env.KEYSTORE_PASSWORD" >> ./build.gradle
          echo "        }" >> ./build.gradle
          echo "    }" >> ./build.gradle
          echo "    buildTypes {" >> ./build.gradle
          echo "        release {" >> ./build.gradle
          echo "            signingConfig signingConfigs.release" >> ./build.gradle
          echo "        }" >> ./build.gradle
          echo "    }" >> ./build.gradle
          echo "}" >> ./build.gradle
      - name: Build AAB
        env:
          VERSION: ${{ env.VERSION }}
          VERCODE: ${{ env.VERCODE }}
          # used by gradle via System.env
          KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
          KEYSTORE_PASSWORD: ${{ secrets.SIGNING_KEYSTORE_PASSWORD }}
        run: |
          cd "$BUILD_DIR"
          submodules/flutter/bin/flutter build appbundle --release --build-number="$VERCODE" --build-name="$VERSION"
      - name: Copy Fastlane metadata to correct directory
        run: |
          cd "$BUILD_DIR"
          cp -r fastlane/ android/
      - name: Create Google Play config file
        env:
          PLAY_STORE_CONFIG_BASE64: ${{ secrets.PLAY_STORE_CONFIG_BASE64 }}
        run: |
          cd "$BUILD_DIR/android"
          openssl base64 -A -d -out play_config.json <<< "$PLAY_STORE_CONFIG_BASE64"
      #- name: Run Fastlane to publish to Play Store and update metadata
      #  run: |
      #    cd "$BUILD_DIR/android"
      #    bundle exec fastlane run upload_to_play_store release_status:"draft" json_key:"play_config.json" aab:"../build/app/outputs/bundle/release/app-release.aab" package_name:"org.mindshub.insigno"
