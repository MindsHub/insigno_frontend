name: Publish to Apple Store
on: workflow_dispatch

env:
  # these are needed by fastlane
  LC_ALL: en_US.UTF-8
  LANG: en_US.UTF-8
  FLUTTER_ROOT: /home/vagrant/build/org.mindshub.insigno/submodules/flutter

jobs:
  build:
    runs-on: macos-latest
    steps:
      - name: Clone repository
        # not using actions/checkout because it does not clone `.git`, required for Flutter
        run: |
          git clone --recurse-submodules "https://github.com/${{ github.repository }}.git" .
          git checkout "${{ github.sha }}"
      - name: Create keychain
        run: |
          security create-keychain -p password build.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p password build.keychain
      - name: Install signing certificate
        run: |
          openssl base64 -A -d -out certificate.p12 <<< "${{ secrets.IOS_CERTIFICATE_P12_BASE64 }}"
          security import certificate.p12 -k build.keychain -f pkcs12 -A -T /usr/bin/codesign -T /usr/bin/security -T /usr/bin/productbuild -T /usr/bin/productsign -P "${{ secrets.IOS_CERTIFICATE_PASSWORD }}"
          security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k password build.keychain
      - name: Install provisioning profile
        run: |
          mkdir -p "$HOME/Library/MobileDevice/Provisioning Profiles"
          openssl base64 -A -d -out "$HOME/Library/MobileDevice/Provisioning Profiles/build_pp.mobileprovision" <<< "${{ secrets.IOS_MOBILEPROVISION_BASE64 }}"
      - name: Create .plist file using Codemagic tools
        run: |
          python3 -m pip install codemagic-cli-tools
          xcode-project use-profiles --project=./ios/Runner.xcodeproj --archive-method=app-store --export-options-plist=export_options.plist --profile="$HOME/Library/MobileDevice/Provisioning Profiles/build_pp.mobileprovision"
      - name: Setup Fastlane
        run: |
          brew install ruby
          gem install bundler
          cp Gemfile Gemfile.lock ios/
          cd ios
          bundle install
      - name: Patch fastlane bug 21125
        run: |
          cd ios
          echo -e "import sys\nv=open(sys.argv[1]).read()\nv=v.replace(',\\\n        \"prices\"\\\n', '\\\n')\nwith open(sys.argv[1], 'w') as f:\n    f.write(v)" | python3 - $(bundle show fastlane)/spaceship/lib/spaceship/connect_api/models/app.rb
      - name: Extract version and version code
        run: |
          echo "VERSION=$(sed -nE 's~^version: ?([^\+]+)\+(.*)$~\1~p' pubspec.yaml)" >> $GITHUB_ENV
          VERSION_CODE=$(sed -nE 's~^version: ?([^\+]+)\+(.*)$~\2~p' pubspec.yaml)
          echo "VERCODE_1=$(( $VERSION_CODE * 10 + 1 ))" >> $GITHUB_ENV
          echo "VERCODE_2=$(( $VERSION_CODE * 10 + 2 ))" >> $GITHUB_ENV
          echo "VERCODE_3=$(( $VERSION_CODE * 10 + 3 ))" >> $GITHUB_ENV
      - name: Print some information
        run: |
          echo "Version: ${{ env.VERSION }}"
          echo "Version codes: ${{ env.VERCODE_1 }}, ${{ env.VERCODE_2 }}, ${{ env.VERCODE_3 }}"
      - name: Setup flutter
        run: |
          submodules/flutter/bin/flutter config --no-analytics
          submodules/flutter/bin/flutter pub get
      - name: Build ios app
        run: |
          submodules/flutter/bin/flutter build ipa --release --export-options-plist=export_options.plist --build-number=${{ env.VERCODE_3 }} --build-name=${{ env.VERSION }}
      - name: Copy Fastlane metadata to correct directory
        run: |
          brew install ffmpeg
          cd ios/
          ./generate_fastlane_metadata.sh ${{ env.VERCODE_3 }}
      - name: Create Apple API Key file
        env:
          FILE_CONTENT: ${{ secrets.APPLE_AUTH_KEY_JSON }}
        run: |
          echo "$FILE_CONTENT" > apple_auth.json
      - name: Run Fastlane to publish to Apple Store and update metadata
        run: |
          cd ios/
          bundle exec fastlane run upload_to_app_store api_key_path:"../apple_auth.json" force:true metadata_path:"./fastlane/metadata" screenshots_path:"./fastlane/screenshots" precheck_include_in_app_purchases:false ipa:"../build/ios/ipa/Insigno.ipa"
        # skip_binary_upload:true app_identifier:org.mindshub.insigno 
