name: Build and create release
on: workflow_dispatch

env:
  # these directories are the same as in F-Droid's buildserver, ensuring reproducibility
  BUILD_DIR: /home/vagrant/build/org.mindshub.insigno
  PUB_CACHE: /home/vagrant/build/org.mindshub.insigno/.pub-cache

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository
        # not using actions/checkout because it does not clone `.git`, required for Flutter
        run: |
          sudo mkdir -p "$BUILD_DIR"
          sudo chown runner "$BUILD_DIR"
          git clone --recurse-submodules "https://github.com/${{ github.repository }}.git" "$BUILD_DIR"
      - name: Extract version and version code
        run: |
          cd "$BUILD_DIR"
          echo "VERSION=$(sed -nE 's~^version: ?([^\+]+)\+(.*)$~\1~p' pubspec.yaml)" >> $GITHUB_ENV
          VERSION_CODE=$(sed -nE 's~^version: ?([^\+]+)\+(.*)$~\2~p' pubspec.yaml)
          echo "VERCODE_1=$(( $VERSION_CODE * 10 + 1 ))" >> $GITHUB_ENV
          echo "VERCODE_2=$(( $VERSION_CODE * 10 + 2 ))" >> $GITHUB_ENV
          echo "VERCODE_3=$(( $VERSION_CODE * 10 + 3 ))" >> $GITHUB_ENV
          BUILD_TOOLS_PATH=$($ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --list_installed | grep build-tools | tail -n 1 | sed -nE 's~^.*(build-tools/[^\s]+).*$~\1~p')
          echo "APKSIGNER=$ANDROID_HOME/$BUILD_TOOLS_PATH/apksigner" >> $GITHUB_ENV
      - name: Print some information
        run: |
          echo "Version: ${{ env.VERSION }}"
          echo "Version codes: ${{ env.VERCODE_1 }}, ${{ env.VERCODE_2 }}, ${{ env.VERCODE_3 }}"
          echo "Build directory: $BUILD_DIR"
          echo "Android home: $ANDROID_HOME"
          echo "Chosen apksigner: ${{ env.APKSIGNER }}"
          echo "Available Android build-tools:" $(ls "$ANDROID_HOME/build-tools/" | xargs)
          echo "Sdkmanager output:"
          $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --list_installed
          exit 1
      - name: Setup flutter
        run: |
          cd "$BUILD_DIR"
          submodules/flutter/bin/flutter config --no-analytics
          submodules/flutter/bin/flutter pub get
      - name: Build x86_64 apk
        run: |
          cd "$BUILD_DIR"
          submodules/flutter/bin/flutter build apk --release --split-per-abi --build-number=${{ env.VERCODE_1 }} --build-name=${{ env.VERSION }} --target-platform=android-x64
      - name: Build arm apk
        run: |
          cd "$BUILD_DIR"
          submodules/flutter/bin/flutter build apk --release --split-per-abi --build-number=${{ env.VERCODE_2 }} --build-name=${{ env.VERSION }} --target-platform=android-arm
      - name: Build arm64 apk
        run: |
          cd "$BUILD_DIR"
          submodules/flutter/bin/flutter build apk --release --split-per-abi --build-number=${{ env.VERCODE_3 }} --build-name=${{ env.VERSION }} --target-platform=android-arm64
      - name: Move apks to folder for upload
        run: |
          mkdir apks
          mv "$BUILD_DIR/build/app/outputs/flutter-apk/app-x86_64-release.apk" "./apks/insigno_${{ env.VERSION }}_${{ env.VERCODE_1 }}.apk"
          mv "$BUILD_DIR/build/app/outputs/flutter-apk/app-armeabi-v7a-release.apk" "./apks/insigno_${{ env.VERSION }}_${{ env.VERCODE_2 }}.apk"
          mv "$BUILD_DIR/build/app/outputs/flutter-apk/app-arm64-v8a-release.apk" "./apks/insigno_${{ env.VERSION }}_${{ env.VERCODE_3 }}.apk"
      - name: Sign APKs
        run: |
          cd apks
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: apks
          path: apks

